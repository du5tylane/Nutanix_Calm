{"status":{},"product_version":"2.7.1.2","spec":{"description":"","resources":{"client_attrs":{"c6232c93-61b7-42c3-9a67-062abd32727b":{"y":421,"x":589.5},"None":{"y":421,"x":589.5},"dd1c9949_deployment":{"y":135.7922077922,"x":695.5389610389},"965b427d-89fd-42e9-aab3-215b355d0c07":{"y":421,"x":589.5},"99a33f70-dc74-ef66-0c6b-8bdd0640cf46":{"y":70.4896123713,"x":428.3110151811},"a251ef4b-0581-0a6b-1379-7a94a0fab60d":{"y":178.4285714286,"x":909.3571428571},"f38cb4df-23b5-444d-bb74-c7d9873ca03d":{"y":186.4285714286,"x":653.3571428571}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"5099ee22_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"f666cee9_runbook","main_task_local_reference":{"kind":"app_task","name":"5099ee22_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"c0af5652_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"6337c938_runbook","main_task_local_reference":{"kind":"app_task","name":"c0af5652_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ebb22e9c_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"53e016c4_runbook","main_task_local_reference":{"kind":"app_task","name":"ebb22e9c_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"a375fe77_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"252d8b28_runbook","main_task_local_reference":{"kind":"app_task","name":"a375fe77_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"c71c893a_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"efb65c85_runbook","main_task_local_reference":{"kind":"app_task","name":"c71c893a_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"Node1","port_list":[],"tier":"","variable_list":[],"description":""}],"substrate_definition_list":[{"description":"","action_list":[],"type":"VMWARE_VM","name":"VMW_Node1","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","disable_readiness_probe":false,"address":"@@{platform.ipAddressList[0]}@@","delay_secs":"60","connection_port":5985,"login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"editables":{"create_spec":{"resources":{"template_nic_list":{},"nic_list":{},"num_vcpus_per_socket":true,"template_controller_list":{},"controller_list":{},"memory_size_mib":true,"template_disk_list":{}}}},"os_type":"Windows","create_spec":{"name":"vm@@{calm_time}@@","type":"PROVISION_VMWARE_VM","drs_mode":true,"cluster":"Cluster1","host":"","resources":{"nic_list":[{"nic_type":"vmxnet3","type":"","net_name":"key-vim.host.PortGroup-VM Network"}],"template_nic_list":[{"nic_type":"","is_deleted":true,"net_name":"","key":4000,"type":""}],"template_controller_list":[],"num_vcpus_per_socket":2,"num_sockets":1,"controller_list":[{"controller_type":"ParaVirtualSCSIController","type":"","bus_sharing":"noSharing","key":1001},{"controller_type":"ParaVirtualSCSIController","type":"","bus_sharing":"noSharing","key":1002}],"memory_size_mib":4096,"power_state":"poweron","guest_customization":{"customization_name":"Windows-2019Retail","cloud_init":"","linux_data":null,"customization_type":"GUEST_OS_WINDOWS","type":"","windows_data":null},"template_disk_list":[],"type":"","account_uuid":"3177b5ac-d203-66e9-e22e-82b3ebd4661e","disk_list":[{"disk_size_mb":-1,"disk_mode":"persistent","adapter_type":"IDE","iso_path":"[vmware_ds1] ISOs\/SQL2017std.iso","location":"ds:\/\/\/vmfs\/volumes\/f3a24513-30a3fab2\/","disk_type":"cdrom","type":""},{"disk_size_mb":40960,"disk_mode":"persistent","device_slot":0,"adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/f3a24513-30a3fab2\/","controller_key":1001,"disk_type":"disk","type":""},{"disk_size_mb":10240,"disk_mode":"persistent","device_slot":1,"adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/f3a24513-30a3fab2\/","controller_key":1001,"disk_type":"disk","type":""},{"disk_size_mb":5120,"disk_mode":"persistent","device_slot":0,"adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/f3a24513-30a3fab2\/","controller_key":1002,"disk_type":"disk","type":""},{"disk_size_mb":6144,"disk_mode":"persistent","device_slot":1,"adapter_type":"SCSI","iso_path":"","location":"ds:\/\/\/vmfs\/volumes\/f3a24513-30a3fab2\/","controller_key":1002,"disk_type":"disk","type":""}]},"template":"5036e609-a1af-61b7-90c7-157a5c1e12b9","datastore":"","storage_pod":"DatastoreCluster1","clone_is_template":false},"variable_list":[]}],"credential_definition_list":[{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Creds_PrismCentral"},{"username":"administrator","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Creds_WINDOWS"},{"username":"administrator@dustylane.local","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"Creds_DomainAdmin"}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"Node1"}],"name":"Node1_Package1","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Node1_Package1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"Set Execution Policy"},{"kind":"app_task","name":"CDROM Letter"},{"kind":"app_task","name":"Resize Partitions"},{"kind":"app_task","name":"Join AD Domain"},{"kind":"app_task","name":"sleep"},{"kind":"app_task","name":"SQL Volume Labels"},{"kind":"app_task","name":"Install SQL"},{"kind":"app_task","name":"SQL Firewall Rules"},{"kind":"app_task","name":"eject CDROM"}],"name":"ba5eb2b6_dag_cloned_1","state":"ACTIVE","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Set Execution Policy"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"CDROM Letter"}},{"from_task_reference":{"kind":"app_task","name":"CDROM Letter"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Resize Partitions"}},{"from_task_reference":{"kind":"app_task","name":"Resize Partitions"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Join AD Domain"}},{"from_task_reference":{"kind":"app_task","name":"Install SQL"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"SQL Firewall Rules"}},{"from_task_reference":{"kind":"app_task","name":"SQL Firewall Rules"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"eject CDROM"}},{"from_task_reference":{"kind":"app_task","name":"sleep"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"SQL Volume Labels"}},{"from_task_reference":{"kind":"app_task","name":"SQL Volume Labels"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Install SQL"}},{"from_task_reference":{"kind":"app_task","name":"Join AD Domain"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"sleep"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Set Execution Policy","state":"ACTIVE","attrs":{"exit_status":[],"script":"Set-ExecutionPolicy -ExecutionPolicy unrestricted -Confirm:$false","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"CDROM Letter","state":"ACTIVE","attrs":{"exit_status":[],"script":"#requires -version 4\n<#\n    .SYNOPSIS\n        Simple Script to change the CDROM drive letter\n    .DESCRIPTION\n        This script leverages the WMI command (if there are multiple CDs),\n        selects the first object in the array and then assigns a \n        specific letter to that device.\n    .NOTES\n        Version:        1.0\n        Author:         Dusty Lane\n        Creation Date:  03\/20\/2020\n        Purpose\/Change: Initial script development\n  \n#>\n# change drive letter of CD\nWrite-Host \"Changing drive letter for cdrom\" -ForegroundColor Green\nGet-WmiObject -Class Win32_volume -Filter 'DriveType=5' | Select-Object -First 1 | Set-WmiInstance -Arguments @{DriveLetter='B:'}","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Resize Partitions","state":"ACTIVE","attrs":{"exit_status":[],"script":"#requires -version 4\n<#\n    .SYNOPSIS\n        Finds raw volumes, creates partitions.  Finds free space and allocates it to partitions.\n    .DESCRIPTION\n        This script is designed to find any offline disks, bring them\n        online, initialize\\format the partitions and assign the next available\n        drive letter.\n\n        For free space found on an existing disk, it will grow the partition\n        utilizing all available free space.\n\n    .NOTES\n        Version:        1.0.1\n        Author:         Dusty Lane\n        Creation Date:  06\/08\/2020\n        Purpose\/Change: add some error handling and change logic.\n  \n#>\n\ntry {\n    \n    # found a little issue with the pre-existing SQLBinary drive....\n    # so I need to add a workaround....\n        \n     get-disk -Number 1 | Set-Disk -IsOffline $false\n     get-disk -Number 1 | Set-Disk -isReadOnly $false\n    \n    # Get the disks\n\n    $Disks = Get-Disk\n\n    foreach ($Disk in $Disks) \n    {\n        # My thought process is to \n        # Bring all the drives online if they are offline....\n\n        # Let filter through any drive that might be offline.\n        if ($disk.operationalstatus -eq \"Offline\")\n        {\n            $disk | set-disk -isoffline $false \n            $disk | set-disk -isReadOnly $false\n        }\n        \n        # I want to make sure that all 'raw' drives are formatted \n        # But we need to add drive letters in order....  going to \n        # convert letter to numbers and add 1, then convert back to letters.\n        #\n        # format any volumes that are 'raw'\n        if ($disk.partitionstyle -eq 'RAW')\n        {\n            Initialize-Disk -Number $disk.DiskNumber -PartitionStyle GPT -PassThru -ErrorAction SilentlyContinue\n            \n            # need to get the drive letter that would be next in line....\n            $findletter = ((get-volume | where-object {$_.driveletter -match '.'}).driveletter | Sort-Object)[-1]\n            $letter = [byte]$findletter + 1\n            $letter = [char]$letter\n            New-Partition -DiskNumber $disk.DiskNumber -DriveLetter $letter -UseMaximumSize\n            Format-Volume -DriveLetter $letter -FileSystem NTFS -NewFileSystemLabel \"$($letter)_Drive\" -AllocationUnitSize 64kb -Confirm:$false\n        }\n    }\n\n    # Get volumes\n    $Volumes = get-volume | where-object {$_.driveletter -match '.'} | where-object {$_.DriveType -eq 'Fixed'}\n\n    # Get partitions on each volume\n    foreach ($Volume in $Volumes)\n    {\n        # The intent here is to see if any of the drives have had space added them.\n        # I think that to do this, we need to check the partition and compare to the volume.\n        # we need to get some variables to make this happen\n        $Partition = Get-Partition -DriveLetter $Volume.DriveLetter\n        $disk = Get-Disk | Where-Object {$_.path -eq $partition.diskid}\n        # get the maximum the size the partition can be.\n        $size = (Get-PartitionSupportedSize -DiskNumber $disk.number -PartitionNumber $Partition.PartitionNumber)\n        if (($Size.SizeMax - $volume.Size) -gt 102400000)\n        {\n            Write-output \"Resizing volume $($Volume.DriveLetter)\"\n            Resize-Partition -DiskNumber $disk.number -PartitionNumber $Partition.PartitionNumber -Size $size.SizeMax -confirm:$false -whatif\n        }\n    }    \n}\ncatch {\n    $error[0]\n}\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Join AD Domain","state":"ACTIVE","attrs":{"exit_status":[],"script":"\n# set the execution policy on the server (atleast temporarily)\nSet-ExecutionPolicy -ExecutionPolicy Unrestricted\n\n# \n# get the index number of the interface\n$InterfaceIndex = (Get-NetIPInterface -AddressFamily ipv4 | \n    where-object {$_.connectionstate -eq \"Connected\"} | \n    where-object {$_.interfacealias -notlike \"Loopback*\"} | \n    Select-Object -First 1).ifIndex\n\n# establish a variable for the IP of the domain controller\n\n$DNSIP = \"@@{DNSServer_IP}@@\" \n\n# set the DNS server so that we can resolve the domain name\nSet-DnsClientServerAddress -InterfaceIndex $InterfaceIndex -ServerAddresses ($DNSIP)\n\n# join computer to domain\n$domainname = ((\"@@{FQDN_Domain}@@\").split('.'))[0]\n$domainAdmin = \"@@{Creds_DomainAdmin.username}@@\" \n$domainPass = ConvertTo-SecureString -asPlainText -Force -String \"@@{Creds_DomainAdmin.secret}@@\"\n\n$DACredential = New-Object System.Management.Automation.PSCredential(\"$($domainName)\\$($domainAdmin)\",$domainPass)\n\nAdd-Computer -DomainName $domainname -Credential $DACredential -Restart -Force -Verbose","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"sleep","state":"ACTIVE","attrs":{"script":"#script\nsleep(30)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"SQL Volume Labels","state":"ACTIVE","attrs":{"exit_status":[],"script":"# SQL Lettering\n\nGet-volume -DriveLetter E | Set-Volume -NewFileSystemLabel \"SQLUserDB\"\nGet-volume -DriveLetter F | Set-Volume -NewFileSystemLabel \"SQLTempDB\"\nGet-volume -DriveLetter G | Set-Volume -NewFileSystemLabel \"SQLUserLogs\"\nGet-volume -DriveLetter H | Set-Volume -NewFileSystemLabel \"SQLTempLogs\"","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"Install SQL","state":"ACTIVE","attrs":{"exit_status":[],"script":"##################################\n##  SQL Install                 ##\n##################################\n\n# ref:  https:\/\/docs.microsoft.com\/en-us\/sql\/database-engine\/install-windows\/install-sql-server-using-sysprep?view=sql-server-ver15\n\n\n#Region Parameters\n\n#For production use, this should be parameterized or encrypted\n$SAPWD = \"@@{SAPWD}@@\"\n\n$SQLUSERDBDIR=\"E:\\MSSQL\\Data\"\n$SQLUSERDBLOGDIR=\"G:\\MSSQL\\Data\"\n$SQLTEMPDBDIR=\"F:\\MSSQL\\Data\"\n$SQLTEMPDBLOGDIR=\"H:\\MSSQL\\Data\"\n$INSTANCEDIR=\"d:\\Program Files\\Microsoft SQL Server\"\n$INSTALLSHAREDDIR=\"d:\\Program Files\\Microsoft SQL Server\"\n$INSTALLSHAREDWOWDIR=\"d:\\Program Files (x86)\\Microsoft SQL Server\"\n#EndRegion\n\n\n$configuration = @\"\n;SQL Server 2017 Configuration File\n[OPTIONS]\nIACCEPTPYTHONLICENSETERMS=\"False\"\nIACCEPTSQLSERVERLICENSETERMS=\"True\"\nACTION=\"CompleteImage\"\nSUPPRESSPRIVACYSTATEMENTNOTICE=\"True\"\nIACCEPTROPENLICENSETERMS=\"True\"\nENU=\"True\"\nQUIET=\"False\"\nQUIETSIMPLE=\"False\"\n;UIMODE=\"Normal\"\nUSEMICROSOFTUPDATE=\"True\"\nHELP=\"False\"\nINDICATEPROGRESS=\"False\"\nX86=\"False\"\nINSTANCENAME=\"MSSQLSERVER\"\nINSTANCEID=\"MSSQLSERVER\"\nSQLTELSVCACCT=\"NT Service\\SQLTELEMETRY\"\nSQLTELSVCSTARTUPTYPE=\"Automatic\"\nAGTSVCACCOUNT=\"NT Service\\SQLSERVERAGENT\"\nAGTSVCSTARTUPTYPE=\"Manual\"\nSQLSVCSTARTUPTYPE=\"Automatic\"\nFILESTREAMLEVEL=\"0\"\nENABLERANU=\"False\"\nSQLCOLLATION=\"SQL_Latin1_General_CP1_CI_AS\"\nSQLSVCACCOUNT=\"NT Service\\MSSQLSERVER\"\nSQLSVCINSTANTFILEINIT=\"False\"\nSQLSYSADMINACCOUNTS=\"BUILTIN\\Administrators\"\nSECURITYMODE=\"SQL\"\nSQLTEMPDBFILECOUNT=\"2\"\nSQLTEMPDBFILESIZE=\"8\"\nSQLTEMPDBFILEGROWTH=\"64\"\nSQLTEMPDBLOGFILESIZE=\"8\"\nSQLTEMPDBLOGFILEGROWTH=\"64\"\nINSTALLSQLDATADIR=\"D:\\Program Files\\Microsoft SQL Server\"\nSQLUSERDBDIR=$SQLUSERDBDIR\nSQLUSERDBLOGDIR=$SQLUSERDBLOGDIR\nSQLTEMPDBDIR=$SQLTEMPDBDIR\nSQLTEMPDBLOGDIR=$SQLTEMPDBLOGDIR\nADDCURRENTUSERASSQLADMIN=\"False\"\nTCPENABLED=\"0\"\nNPENABLED=\"0\"\nBROWSERSVCSTARTUPTYPE=\"Disabled\"\nFTSVCACCOUNT=\"NT Service\\MSSQLFDLauncher\"\n\"@\n\n$configuration | Out-File -FilePath c:\\SQLSysprep\\SQL_ConfigurationFile.INI -Encoding ascii -Force\n\n$InstallCommand = \"B:\\Setup.exe \/q \/SAPWD=$($SAPWD) \/ConfigurationFile=`\"c:\\SQLSysprep\\SQL_ConfigurationFile.INI`\"\"\n\n$InstallCommand | Out-File -FilePath c:\\SQLSysprep\\sql_install.cmd -Encoding ascii -Force\n\n# Complete the sql install after the server has been sysprep\n\nInvoke-Command -ComputerName @@{name}@@ {\n    B:\\Setup.exe \/q \/SAPWD=$SAPWD \/ConfigurationFile=\"c:\\SQLSysprep\\SQL_ConfigurationFile.INI\"\n}\n\n\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"SQL Firewall Rules","state":"ACTIVE","attrs":{"exit_status":[],"script":"#requires -version 4\n<#\n    .SYNOPSIS\n        Simple Script to install prerequisites for SQL AAG\n    .DESCRIPTION\n        This is one of the scripts in a series of scripts\n        that is intended for use in an automation sequence to \n        confiugre SQL Always On.\n\n        This script specifically sets the firewall rules\n\n    .NOTES\n        Version:        1.1\n        Author:         Dusty Lane\n        Creation Date:  06\/09\/2020\n        Purpose\/Change: add AAG port\n  \n#>\n\nNew-NetFirewallRule -DisplayName \"SQL Server - TCP 1433\" -Direction Inbound -Protocol TCP -LocalPort 1433 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Admin Connection - TCP 1434\" -Direction Inbound -Protocol TCP -LocalPort 1434 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Database Management - UDP 1434\" -Direction Inbound -Protocol UDP -LocalPort 1434 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Service Broker - TCP 4022\" -Direction Inbound -Protocol TCP -LocalPort 4022 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Debugger-RPC - TCP 135\" -Direction Inbound -Protocol TCP -LocalPort 135 -Action allow\nNew-NetFirewallRule -DisplayName \"SQL Browser - TCP 2382\" -Direction Inbound -Protocol TCP -LocalPort 2382 -Action allow\n# this next rule may need to be updated if the port is changed\nNew-NetFirewallRule -DisplayName \"SQL AAG - TCP 5022\" -Direction Inbound -Protocol TCP -LocalPort 5022 -Action allow","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Node1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"eject CDROM","state":"ACTIVE","attrs":{"exit_status":[],"script":"try { \n$CDROM = New-Object -ComObject \"Shell.Application\"\n$CDROM.Namespace(17).Items() | \n    Where-Object { $_.Type -eq \"CD Drive\" } | \n        foreach { $_.InvokeVerb(\"Eject\") }\n\n} catch { \n    $_\n} ","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"cae79b83_runbook_cloned_0","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"ba5eb2b6_dag_cloned_1"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Node1_Package1"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"1ae97f3d_dag_cloned_1","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"01c721d0_runbook_cloned_0","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"1ae97f3d_dag_cloned_1"},"message_list":[],"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"depends_on_list":[],"name":"dd1c9949_deployment","published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Node1_Package1"}],"substrate_local_reference":{"kind":"app_substrate","name":"VMW_Node1"},"min_replicas":"1","variable_list":[],"description":""}],"description":"","action_list":[],"name":"VMW_Windows2019","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"Enter the FQDN name of the Active Directory Domain Name.  example:  contoso.com","data_type":"BASE","type":"LOCAL","name":"FQDN_Domain","value":"dustylane.local","label":"Domain Name","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"This is preferably AD integrated DNS Server IP address.","data_type":"BASE","type":"LOCAL","name":"DNSServer_IP","value":"172.16.2.25","label":"IP of DNS Server","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"SECRET","name":"SAPWD","value":"","label":"SQL SA Password","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":false},"is_hidden":true,"options":{"type":"PREDEFINED","choices":[]}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"Creds_WINDOWS"},"type":"USER"},"name":"VMWare_win2019gui_SQL2017std"},"api_version":"3.0","metadata":{"last_update_time":"1591813772375630","kind":"blueprint","spec_version":48,"creation_time":"1591655953779325","name":"VMWare_win2019gui_SQL2017std"}}